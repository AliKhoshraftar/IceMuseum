plugins {
    id 'com.android.application'
    id 'kotlin-parcelize'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

//def credentials = rootProject.file("local.properties")
//def credentialProperty = new Properties()
//credentialProperty.load(new FileInputStream(credentials))

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.icemobile.museum"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_KEY", "\"${project.API_KEY}\""
        buildConfigField "String", "Culture", "\"en\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.0.4'
        kotlinCompilerVersion '1.5.31'
    }

    buildFeatures {
        viewBinding true
        compose = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    signingConfigs {
        release {
//            storeFile file("keystore/sign.jks")
//            storePassword SIGNING_STORE_PASSWORD
//            keyAlias SIGNING_KEY_ALIAS
//            keyPassword SIGNING_KEY_PASSWORD
//
//            v1SigningEnabled true
//            v2SigningEnabled true
        }

        release {
            def tmpFilePath = "/home/runner/work/IceMuseum/IceMuseum/app/keystore/"
            def allFilesFromDir = new File(tmpFilePath).listFiles()

            if (allFilesFromDir != null) {
                def keystoreFile = allFilesFromDir.first()
                keystoreFile.renameTo("keystore/sign.jks")
            }

            storeFile = file("keystore/sign.jks")
            storePassword System.getenv("SIGNING_STORE_PASSWORD")
            keyAlias System.getenv("SIGNING_KEY_ALIAS")
            keyPassword System.getenv("SIGNING_KEY_PASSWORD")

//            v1SigningEnabled true
//            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

//    flavorDimensions "culture"
//    productFlavors {
//        MuseumEN {
//            applicationIdSuffix ".en"
//            versionNameSuffix "-EN"
//        }
//        MuseumNL {
//            applicationIdSuffix ".nl"
//            versionNameSuffix "-NL"
//        }
//    }
//
//    applicationVariants.all { variant ->
//        println("Iterating variant: " + variant.getName())
//        if (variant.getName() == "MuseumENDebug" || variant.getName() == "MuseumENRelease") {
//            variant.buildConfigField "String", "Culture", "\"en\""
//        } else if (variant.getName() == "MuseumNLDebug" || variant.getName() == "MuseumNLRelease"){
//            variant.buildConfigField "String", "Culture", "\"nl\""
//        }
//    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Compose dependencies
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.4.0"
    implementation "androidx.navigation:navigation-compose:2.4.0-beta02"
    implementation "com.google.accompanist:accompanist-flowlayout:0.17.0"
    implementation "androidx.compose.ui:ui:1.0.5"
    implementation "androidx.compose.material:material:1.0.5"
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation "androidx.compose.ui:ui-tooling-preview:1.0.5"
    implementation "androidx.compose.ui:ui-tooling:1.0.5"
    debugImplementation "androidx.compose.ui:ui-tooling:1.0.5"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0-beta01'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.2"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    // Coil Image Loader
    implementation 'io.coil-kt:coil-compose:1.4.0'

    // Timber Logger
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Compose SystemUi Controller
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.21.3-beta"


    // Tests
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.0.5'
    testImplementation 'com.google.truth:truth:1.1.3'

    testImplementation 'org.robolectric:robolectric:4.6'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0-RC'
}